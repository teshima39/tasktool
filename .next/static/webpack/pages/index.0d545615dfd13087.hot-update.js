"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/organisms/ProcList.tsx":
/*!*******************************************!*\
  !*** ./components/organisms/ProcList.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProcList\": function() { return /* binding */ ProcList; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! components/organisms/ProcList.module.scss */ \"./components/organisms/ProcList.module.scss\");\n/* harmony import */ var components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var ress__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ress */ \"./node_modules/ress/dist/ress.min.css\");\n/* harmony import */ var ress__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ress__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/icons-material/Add */ \"./node_modules/@mui/icons-material/Add.js\");\n/* harmony import */ var _molecules_ProcFrame__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../molecules/ProcFrame */ \"./components/molecules/ProcFrame.tsx\");\n/* harmony import */ var _molecules_TaskList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../molecules/TaskList */ \"./components/molecules/TaskList.tsx\");\n/* harmony import */ var _atoms_ProcTitle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../atoms/ProcTitle */ \"./components/atoms/ProcTitle.tsx\");\n/* harmony import */ var _mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/icons-material/Delete */ \"./node_modules/@mui/icons-material/Delete.js\");\n/* harmony import */ var _hook_useDidUpdateEffect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/hook/useDidUpdateEffect */ \"./hook/useDidUpdateEffect.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\nconst ProcList = ()=>{\n    _s();\n    console.log(\"reload\");\n    const nowDate = \"0000\";\n    const [taskList, setTaskList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        [\n            \"Procttl00\",\n            {\n                \"title\": \"task00\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            },\n            {\n                \"title\": \"task01\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            },\n            {\n                \"title\": \"task02\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ],\n        [\n            \"Procttl01\",\n            {\n                \"title\": \"task03\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            },\n            {\n                \"title\": \"task04\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ],\n        [\n            \"Procttl02\",\n            {\n                \"title\": \"task05\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ]\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let taskListJson = localStorage.getItem(\"taskList\") || \"\";\n        if (taskListJson) {\n            let taskList = JSON.parse(\"\".concat(taskListJson));\n            setTaskList(taskList);\n        } else {}\n    }, []);\n    (0,_hook_useDidUpdateEffect__WEBPACK_IMPORTED_MODULE_6__.useDidUpdateEffect)(()=>{\n        let taskListJson = JSON.stringify(taskList, undefined, 1);\n        localStorage.setItem(\"taskList\", taskListJson);\n        console.log(\"OK\");\n    }, [\n        taskList\n    ]);\n    const [mousepositionX, setmousepositionX] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [mousepositionY, setmousepositionY] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [grabTaskNo, setGrabTaskNo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [grabListNo, setGrabListNo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [altGrabListNo, setAltGrabListNo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    let grabPositionX = 0;\n    let grabPositionY = 0;\n    let grabIndex = null;\n    let listNo = null;\n    let taskNo = null;\n    let elemBelowlistNo = null;\n    let elemBelowtaskNo = null;\n    const trans = {\n        transform: \"translate(\".concat(mousepositionX, \"px, \").concat(mousepositionY, \"px)\"),\n        position: \"relative\",\n        zIndex: \"999\"\n    };\n    const listSort = (grabIndex, elemBelowlistNo)=>{\n        if (grabIndex != null && elemBelowlistNo != null && elemBelowlistNo >= 0 && grabIndex != elemBelowlistNo) {\n            let newTaskList = [\n                ...taskList\n            ];\n            let remove = newTaskList.splice(grabIndex, 1);\n            if (grabIndex > elemBelowlistNo) {\n                newTaskList.splice(elemBelowlistNo, 0, remove[0]);\n            } else {\n                newTaskList.splice(elemBelowlistNo - 1, 0, remove[0]);\n            }\n            setTaskList(newTaskList);\n        }\n        setGrabTaskNo(null);\n        setGrabListNo(null);\n        setAltGrabListNo(null);\n        listNo = null;\n        taskNo = null;\n        elemBelowlistNo = null;\n    };\n    const taskSort = (listNo, taskNo, elemBelowtaskNo)=>{\n        if (listNo != null && taskNo != null && elemBelowtaskNo != null && elemBelowtaskNo >= 0 && listNo != elemBelowtaskNo) {\n            console.log(\"OK\");\n            let newTaskList = [\n                ...taskList\n            ];\n            let insertTaskList = [\n                ...taskList\n            ][elemBelowtaskNo];\n            let beforeTaskList = taskList[listNo];\n            let moveTask = taskList[listNo][taskNo];\n            beforeTaskList.splice(taskNo, 1);\n            insertTaskList.push(moveTask);\n            newTaskList.splice(listNo, 1, beforeTaskList);\n            newTaskList.splice(elemBelowtaskNo, 1, insertTaskList);\n            setTaskList(newTaskList);\n        }\n        setGrabTaskNo(null);\n        setGrabListNo(null);\n        setAltGrabListNo(null);\n        listNo = null;\n        taskNo = null;\n        elemBelowtaskNo = null;\n    };\n    const onClickAddProcess = ()=>{\n        let newTaskList = [\n            ...taskList\n        ];\n        newTaskList.push([\n            \"Procttl\",\n            {\n                \"title\": \"task\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ]);\n        setTaskList(newTaskList);\n    };\n    const onClickAddTask = (event)=>{\n        const eventNode = event.currentTarget;\n        const addtaskNo = Number(eventNode.getAttribute(\"id\"));\n        let newTaskList = [\n            ...taskList\n        ];\n        let newTask = [\n            ...taskList[addtaskNo]\n        ];\n        newTask.push({\n            \"title\": \"newtask\",\n            \"date\": \"\".concat(nowDate),\n            \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n        });\n        newTaskList.splice(addtaskNo, 1, newTask);\n        setTaskList(newTaskList);\n    };\n    const listMouseDown = (event)=>{\n        var _eventNode_getAttribute;\n        const eventNode = event.currentTarget;\n        grabIndex = Number((_eventNode_getAttribute = eventNode.getAttribute(\"id\")) === null || _eventNode_getAttribute === void 0 ? void 0 : _eventNode_getAttribute.replace(\"grabArea__\", \"\"));\n        setGrabListNo(grabIndex);\n        const listMouseMove = (event)=>{\n            var _elemBelow_getAttribute;\n            if (eventNode && eventNode.parentNode) {\n                const parentNode = eventNode.parentNode;\n                eventNode.style.visibility = \"hidden\";\n                parentNode.style.visibility = \"hidden\";\n            }\n            let elemBelow = document.elementFromPoint(event.clientX, event.clientY);\n            console.log(elemBelow);\n            let elemBelowNo = (_elemBelow_getAttribute = elemBelow === null || elemBelow === void 0 ? void 0 : elemBelow.getAttribute(\"id\")) === null || _elemBelow_getAttribute === void 0 ? void 0 : _elemBelow_getAttribute.replace(\"listInsertArea__\", \"\");\n            if (elemBelowNo != null) {\n                elemBelowlistNo = Number(elemBelowNo);\n            } else {\n                elemBelowlistNo = null;\n            }\n            if (eventNode && eventNode.parentNode) {\n                const parentNode = eventNode.parentNode;\n                eventNode.style.visibility = \"visible\";\n                parentNode.style.visibility = \"visible\";\n            }\n            setmousepositionX(event.clientX - grabPositionX + window.scrollX);\n            setmousepositionY(event.clientY - grabPositionY + window.scrollY);\n        };\n        document.addEventListener(\"mousemove\", listMouseMove);\n        grabPositionX = eventNode.getBoundingClientRect().left + window.scrollX + eventNode.offsetWidth / 2;\n        grabPositionY = eventNode.getBoundingClientRect().top + window.scrollY + eventNode.offsetHeight / 2;\n        if (eventNode) {\n            eventNode.onmouseup = ()=>{\n                listSort(grabIndex, elemBelowlistNo);\n                document.removeEventListener(\"mousemove\", listMouseMove);\n                setmousepositionX(0);\n                setmousepositionY(0);\n                grabPositionX = 0;\n                grabPositionY = 0;\n                elemBelowlistNo = null;\n                grabIndex = null;\n                setGrabTaskNo(null);\n                setGrabListNo(null);\n                setAltGrabListNo(null);\n            };\n        }\n    };\n    const taskMouseDown = (event)=>{\n        const eventNode = event.currentTarget;\n        const taskMouseMove = (event)=>{\n            var _elemBelow_getAttribute;\n            if (eventNode) {\n                eventNode.style.visibility = \"hidden\";\n            }\n            let elemBelow = document.elementFromPoint(event.clientX, event.clientY);\n            let elemBelowNo = (_elemBelow_getAttribute = elemBelow === null || elemBelow === void 0 ? void 0 : elemBelow.getAttribute(\"id\")) === null || _elemBelow_getAttribute === void 0 ? void 0 : _elemBelow_getAttribute.replace(\"taskMoveFrame__\", \"\");\n            if (elemBelowNo != null) {\n                elemBelowtaskNo = Number(elemBelowNo);\n            } else {\n                elemBelowtaskNo = null;\n            }\n            if (eventNode) {\n                eventNode.style.visibility = \"visible\";\n            }\n            setmousepositionX(event.clientX - grabPositionX + window.scrollX);\n            setmousepositionY(event.clientY - grabPositionY + window.scrollY);\n        };\n        document.addEventListener(\"mousemove\", taskMouseMove);\n        let taskId = String(eventNode.getAttribute(\"id\"));\n        taskId = taskId === null || taskId === void 0 ? void 0 : taskId.replace(\"task__\", \"\");\n        listNo = Number(String(taskId)[0]);\n        taskNo = Number(String(taskId)[1]);\n        grabPositionX = eventNode.getBoundingClientRect().left + window.scrollX + eventNode.offsetWidth / 2;\n        grabPositionY = eventNode.getBoundingClientRect().top + window.scrollY + eventNode.offsetHeight / 2;\n        setGrabTaskNo(taskNo);\n        setAltGrabListNo(listNo);\n        if (eventNode) {\n            eventNode.onmouseup = ()=>{\n                taskSort(listNo, taskNo, elemBelowtaskNo);\n                document.removeEventListener(\"mousemove\", taskMouseMove);\n                setmousepositionX(0);\n                setmousepositionY(0);\n                grabPositionX = 0;\n                grabPositionY = 0;\n                elemBelowtaskNo = null;\n                setGrabTaskNo(null);\n                setGrabListNo(null);\n                setAltGrabListNo(null);\n            };\n        }\n    };\n    const onChangeProcttl = (event, listNo)=>{\n        if (event.target.value.length <= 10) {\n            let changeList = taskList[listNo];\n            changeList[0] = event.target.value;\n            setTaskList(taskList.map((element, index)=>index === listNo ? changeList : element));\n        }\n    };\n    const onChangeElement = (event, listNo, taskNo, taskKey)=>{\n        let changeList = taskList[listNo];\n        if (taskKey == \"title\" && event.target.value.length <= 10) {\n            changeList[taskNo][taskKey] = event.target.value;\n        }\n        if (taskKey == \"comment\") {\n            changeList[taskNo][taskKey] = event.target.value;\n        }\n        setTaskList(taskList.map((element, index)=>index === listNo ? changeList : element));\n    };\n    const onDeleteList = (listNo)=>{\n        let result = confirm(\"削除します。よろしいですか？\");\n        if (result) {\n            let newTaskList = [\n                ...taskList\n            ];\n            newTaskList.splice(listNo, 1);\n            setTaskList(newTaskList);\n        }\n    };\n    const onDeleteTask = (listNo, taskNo)=>{\n        let result = confirm(\"削除します。よろしいですか？\");\n        if (result) {\n            let changeList = taskList[listNo];\n            changeList.splice(taskNo, 1);\n            setTaskList(taskList.map((element, index)=>index === listNo ? changeList : element));\n            closeModal(listNo, taskNo);\n        }\n    };\n    const closeModal = (listNo, taskNo)=>{\n        let node = document.getElementById(\"modal__\".concat(listNo).concat(taskNo));\n        if (node) {\n            node.style.display = \"none\";\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n        className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().proc_list),\n        id: \"ul\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                id: \"listInsertArea__0\",\n                className: \"\".concat((components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().insertArea), \" \").concat(grabListNo != null ? (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().insertArea_active) : \"\")\n            }, void 0, false, {\n                fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                lineNumber: 323,\n                columnNumber: 7\n            }, undefined),\n            taskList.map((listElement, index)=>{\n                const listNo = index;\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_molecules_ProcFrame__WEBPACK_IMPORTED_MODULE_3__.ProcFrame, {\n                            index: index,\n                            grabListNo: grabListNo,\n                            grabTaskNo: grabTaskNo,\n                            listMouseDown: listMouseDown,\n                            trans: trans,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dl\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_atoms_ProcTitle__WEBPACK_IMPORTED_MODULE_5__.ProcTitle, {\n                                        index: index,\n                                        onChangeProcttl: onChangeProcttl,\n                                        value: taskList[index][0]\n                                    }, void 0, false, {\n                                        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                        lineNumber: 331,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                        fontSize: \"small\",\n                                        className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().list_delete),\n                                        onClick: ()=>onDeleteList(index)\n                                    }, void 0, false, {\n                                        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                        lineNumber: 334,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_molecules_TaskList__WEBPACK_IMPORTED_MODULE_4__.TaskList, {\n                                        listElement: listElement,\n                                        index: index,\n                                        listNo: listNo,\n                                        grabTaskNo: grabTaskNo,\n                                        altGrabListNo: altGrabListNo,\n                                        taskMouseDown: taskMouseDown,\n                                        onClickAddTask: onClickAddTask,\n                                        trans: trans,\n                                        onChangeElement: onChangeElement,\n                                        onDeleteTask: onDeleteTask,\n                                        closeModal: closeModal\n                                    }, void 0, false, {\n                                        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                        lineNumber: 335,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                lineNumber: 330,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                            lineNumber: 329,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                            id: \"listInsertArea__\".concat(index + 1),\n                            className: \"\".concat((components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().insertArea), \" \").concat(grabListNo != null ? (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().insertArea_active) : \"\", \" \")\n                        }, void 0, false, {\n                            fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                            lineNumber: 340,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().list_last),\n                style: {\n                    visibility: taskList.length < 5 ? \"visible\" : \"hidden\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_7___default().addIcon),\n                    fontSize: \"large\",\n                    onClick: onClickAddProcess\n                }, void 0, false, {\n                    fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                    lineNumber: 346,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                lineNumber: 345,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n        lineNumber: 322,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ProcList, \"J2ikYDdVkb4zjaLT8Q1yTSh0Pq0=\", false, function() {\n    return [\n        _hook_useDidUpdateEffect__WEBPACK_IMPORTED_MODULE_6__.useDidUpdateEffect\n    ];\n});\n_c = ProcList;\nvar _c;\n$RefreshReg$(_c, \"ProcList\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/organisms/ProcList.tsx\n"));

/***/ })

});