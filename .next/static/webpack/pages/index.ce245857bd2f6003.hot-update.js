"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index", {

  /***/
  "./components/organisms/ProcList.tsx":
    /*!*******************************************!*\
      !*** ./components/organisms/ProcList.tsx ***!
      \*******************************************/
    /***/
    (function (module, __webpack_exports__, __webpack_require__) {

      eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ProcList\": function() { return /* binding */ ProcList; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! components/organisms/ProcList.module.scss */ \"./components/organisms/ProcList.module.scss\");\n/* harmony import */ var components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var ress__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ress */ \"./node_modules/ress/dist/ress.min.css\");\n/* harmony import */ var ress__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(ress__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/icons-material/Add */ \"./node_modules/@mui/icons-material/Add.js\");\n/* harmony import */ var _mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/icons-material/Delete */ \"./node_modules/@mui/icons-material/Delete.js\");\n/* harmony import */ var _molecules_ProcFrame__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../molecules/ProcFrame */ \"./components/molecules/ProcFrame.tsx\");\n/* harmony import */ var _molecules_TaskList__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../molecules/TaskList */ \"./components/molecules/TaskList.tsx\");\n/* harmony import */ var _atoms_ProcTitle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../atoms/ProcTitle */ \"./components/atoms/ProcTitle.tsx\");\n/* harmony import */ var _hook_useDidUpdateEffect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../hook/useDidUpdateEffect */ \"./hook/useDidUpdateEffect.tsx\");\n/* harmony import */ var _hook_useNowDate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../hook/useNowDate */ \"./hook/useNowDate.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\nconst ProcList = ()=>{\n    _s();\n    var _s1 = $RefreshSig$();\n    /* errors (425, 418, 423)回避のため  */ const [nowDate, setNowDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(_s1(()=>{\n        _s1();\n        setNowDate((0,_hook_useNowDate__WEBPACK_IMPORTED_MODULE_7__.useNowDate)());\n    }, \"ZUjhf/wDGWJawoKWG3bJvmUTZ0s=\", false, function() {\n        return [\n            _hook_useNowDate__WEBPACK_IMPORTED_MODULE_7__.useNowDate\n        ];\n    }), []);\n    const [taskList, setTaskList] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([\n        [\n            \"プロセス00\",\n            {\n                \"title\": \"タスク00\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            },\n            {\n                \"title\": \"タスク01\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            },\n            {\n                \"title\": \"タスク02\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ],\n        [\n            \"プロセス01\",\n            {\n                \"title\": \"タスク03\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            },\n            {\n                \"title\": \"タスク04\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ],\n        [\n            \"プロセス02\",\n            {\n                \"title\": \"タスク05\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ]\n    ]);\n    /* ローカルストレージにタスク配列を保存  */ (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let taskListJson = localStorage.getItem(\"taskList\") || \"\";\n        if (taskListJson) {\n            let getTaskListJson = JSON.parse(\"\".concat(taskListJson));\n            setTaskList(getTaskListJson);\n        } else {\n            setTaskList(taskList);\n        }\n    }, []);\n    (0,_hook_useDidUpdateEffect__WEBPACK_IMPORTED_MODULE_6__.useDidUpdateEffect)(()=>{\n        let taskListJson = JSON.stringify(taskList, undefined, 1);\n        localStorage.setItem(\"taskList\", taskListJson);\n    }, [\n        taskList\n    ]);\n    /* 各変数  */ const [mousepositionX, setMousepositionX] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [mousepositionY, setMousepositionY] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [grabTaskNo, setGrabTaskNo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [grabProcNo, setgrabProcNo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [altgrabProcNo, setAltgrabProcNo] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    let grabPositionX = 0;\n    let grabPositionY = 0;\n    let grabIndex = null;\n    let procNo = null;\n    let taskNo = null;\n    let elemBelowProcNo = null;\n    let elemBelowtaskNo = null;\n    const trans = {\n        transform: \"translate(\".concat(mousepositionX, \"px, \").concat(mousepositionY, \"px)\"),\n        position: \"relative\",\n        zIndex: \"999\"\n    };\n    /* プロセス並び替え  */ const processSort = (grabIndex, elemBelowProcNo)=>{\n        if (grabIndex != null && elemBelowProcNo != null && elemBelowProcNo >= 0 && grabIndex != elemBelowProcNo) {\n            let newTaskList = [\n                ...taskList\n            ];\n            let remove = newTaskList.splice(grabIndex, 1);\n            if (grabIndex > elemBelowProcNo) {\n                newTaskList.splice(elemBelowProcNo, 0, remove[0]);\n            } else {\n                newTaskList.splice(elemBelowProcNo - 1, 0, remove[0]);\n            }\n            setTaskList(newTaskList);\n        }\n        setGrabTaskNo(null);\n        setgrabProcNo(null);\n        setAltgrabProcNo(null);\n    };\n    /* タスク並び替え  */ const taskSort = (procNo, taskNo, elemBelowtaskNo)=>{\n        if (procNo != null && taskNo != null && elemBelowtaskNo != null && elemBelowtaskNo >= 0 && procNo != elemBelowtaskNo) {\n            console.log(\"OK\");\n            let newTaskList = [\n                ...taskList\n            ];\n            let insertTaskList = [\n                ...taskList\n            ][elemBelowtaskNo];\n            let beforeTaskList = taskList[procNo];\n            let moveTask = taskList[procNo][taskNo];\n            beforeTaskList.splice(taskNo, 1);\n            insertTaskList.push(moveTask);\n            newTaskList.splice(procNo, 1, beforeTaskList);\n            newTaskList.splice(elemBelowtaskNo, 1, insertTaskList);\n            setTaskList(newTaskList);\n        }\n        setGrabTaskNo(null);\n        setgrabProcNo(null);\n        setAltgrabProcNo(null);\n    };\n    /* プロセス追加  */ const onClickAddProc = ()=>{\n        let newTaskList = [\n            ...taskList\n        ];\n        newTaskList.push([\n            \"newプロセス\",\n            {\n                \"title\": \"newタスク\",\n                \"date\": \"\".concat(nowDate),\n                \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n            }\n        ]);\n        setTaskList(newTaskList);\n    };\n    /* タスク追加  */ const onClickAddTask = (event)=>{\n        const eventNode = event.currentTarget;\n        const addtaskNo = Number(eventNode.getAttribute(\"id\"));\n        let newTaskList = [\n            ...taskList\n        ];\n        let newTask = [\n            ...taskList[addtaskNo]\n        ];\n        newTask.push({\n            \"title\": \"newタスク\",\n            \"date\": \"\".concat(nowDate),\n            \"comment\": \"txtxtxtxtxtxtxtxtxtxtxt\"\n        });\n        newTaskList.splice(addtaskNo, 1, newTask);\n        setTaskList(newTaskList);\n    };\n    /* プロセスクリック  */ const procMouseDown = (event)=>{\n        var _eventNode_getAttribute;\n        const eventNode = event.currentTarget;\n        grabIndex = Number((_eventNode_getAttribute = eventNode.getAttribute(\"id\")) === null || _eventNode_getAttribute === void 0 ? void 0 : _eventNode_getAttribute.replace(\"grabArea__\", \"\"));\n        setgrabProcNo(grabIndex);\n        /* プロセスマウス追従  */ const procMouseMove = (event)=>{\n            var _elemBelow_getAttribute;\n            if (eventNode && eventNode.parentNode) {\n                const parentNode = eventNode.parentNode;\n                eventNode.style.visibility = \"hidden\";\n                parentNode.style.visibility = \"hidden\";\n            }\n            let elemBelow = document.elementFromPoint(event.clientX, event.clientY);\n            let elemBelowId = (_elemBelow_getAttribute = elemBelow === null || elemBelow === void 0 ? void 0 : elemBelow.getAttribute(\"id\")) === null || _elemBelow_getAttribute === void 0 ? void 0 : _elemBelow_getAttribute.replace(\"procInsertArea__\", \"\");\n            if (elemBelowId != null) {\n                elemBelowProcNo = Number(elemBelowId);\n            } else {\n                elemBelowProcNo = null;\n            }\n            if (eventNode && eventNode.parentNode) {\n                const parentNode = eventNode.parentNode;\n                eventNode.style.visibility = \"visible\";\n                parentNode.style.visibility = \"visible\";\n            }\n            setMousepositionX(event.clientX - grabPositionX + window.scrollX);\n            setMousepositionY(event.clientY - grabPositionY + window.scrollY);\n        };\n        document.addEventListener(\"mousemove\", procMouseMove);\n        grabPositionX = eventNode.getBoundingClientRect().left + window.scrollX + eventNode.offsetWidth / 2;\n        grabPositionY = eventNode.getBoundingClientRect().top + window.scrollY + eventNode.offsetHeight / 2;\n        if (eventNode) {\n            eventNode.onmouseup = ()=>{\n                processSort(grabIndex, elemBelowProcNo);\n                document.removeEventListener(\"mousemove\", procMouseMove);\n                setMousepositionX(0);\n                setMousepositionY(0);\n                setGrabTaskNo(null);\n                setgrabProcNo(null);\n                setAltgrabProcNo(null);\n            };\n        }\n    };\n    /* タスククリック  */ const taskMouseDown = (event)=>{\n        const eventNode = event.currentTarget;\n        /* プロセスマウス追従  */ const taskMouseMove = (event)=>{\n            var _elemBelow_getAttribute;\n            if (eventNode) {\n                eventNode.style.visibility = \"hidden\";\n            }\n            let elemBelow = document.elementFromPoint(event.clientX, event.clientY);\n            let elemBelowId = (_elemBelow_getAttribute = elemBelow === null || elemBelow === void 0 ? void 0 : elemBelow.getAttribute(\"id\")) === null || _elemBelow_getAttribute === void 0 ? void 0 : _elemBelow_getAttribute.replace(\"taskMoveFrame__\", \"\");\n            if (elemBelowId != null) {\n                elemBelowtaskNo = Number(elemBelowId);\n            } else {\n                elemBelowtaskNo = null;\n            }\n            if (eventNode) {\n                eventNode.style.visibility = \"visible\";\n            }\n            setMousepositionX(event.clientX - grabPositionX + window.scrollX);\n            setMousepositionY(event.clientY - grabPositionY + window.scrollY);\n        };\n        document.addEventListener(\"mousemove\", taskMouseMove);\n        let taskId = String(eventNode.getAttribute(\"id\"));\n        taskId = taskId === null || taskId === void 0 ? void 0 : taskId.replace(\"task__\", \"\");\n        procNo = Number(String(taskId)[0]);\n        taskNo = Number(String(taskId)[1]);\n        grabPositionX = eventNode.getBoundingClientRect().left + window.scrollX + eventNode.offsetWidth / 2;\n        grabPositionY = eventNode.getBoundingClientRect().top + window.scrollY + eventNode.offsetHeight / 2;\n        setGrabTaskNo(taskNo);\n        setAltgrabProcNo(procNo);\n        if (eventNode) {\n            eventNode.onmouseup = ()=>{\n                taskSort(procNo, taskNo, elemBelowtaskNo);\n                document.removeEventListener(\"mousemove\", taskMouseMove);\n                setMousepositionX(0);\n                setMousepositionY(0);\n                setGrabTaskNo(null);\n                setgrabProcNo(null);\n                setAltgrabProcNo(null);\n            };\n        }\n    };\n    /* プロセスタイトル変更  */ const onChangeProcttl = (event, procNo)=>{\n        if (event.target.value.length <= 10) {\n            let changeList = taskList[procNo];\n            changeList[0] = event.target.value;\n            setTaskList(taskList.map((element, index)=>index === procNo ? changeList : element));\n        }\n    };\n    /* タスク要素変更  */ const onChangeTaskElement = (event, procNo, taskNo, taskKey)=>{\n        let changeList = taskList[procNo];\n        if (taskKey == \"title\" && event.target.value.length <= 10) {\n            changeList[taskNo][taskKey] = event.target.value;\n        }\n        if (taskKey == \"comment\") {\n            changeList[taskNo][taskKey] = event.target.value;\n        }\n        setTaskList(taskList.map((element, index)=>index === procNo ? changeList : element));\n    };\n    /* プロセス削除 */ const onDeleteProc = (procNo)=>{\n        let result = confirm(\"削除します。よろしいですか？\");\n        if (result) {\n            let newTaskList = [\n                ...taskList\n            ];\n            newTaskList.splice(procNo, 1);\n            setTaskList(newTaskList);\n        }\n    };\n    /* タスク削除 */ const onDeleteTask = (procNo, taskNo)=>{\n        let result = confirm(\"削除します。よろしいですか？\");\n        if (result) {\n            let changeList = taskList[procNo];\n            changeList.splice(taskNo, 1);\n            setTaskList(taskList.map((element, index)=>index === procNo ? changeList : element));\n            closeModal(procNo, taskNo);\n        }\n    };\n    /* モーダル閉じる */ const closeModal = (procNo, taskNo)=>{\n        let node = document.getElementById(\"modal__\".concat(procNo).concat(taskNo));\n        if (node) {\n            node.style.display = \"none\";\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n        className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().proc_list),\n        id: \"ul\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                id: \"procInsertArea__0\",\n                className: \"\".concat((components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().insertArea), \" \").concat(grabProcNo != null ? (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().insertArea_active) : \"\")\n            }, void 0, false, {\n                fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                lineNumber: 319,\n                columnNumber: 7\n            }, undefined),\n            taskList.map((listElement, index)=>{\n                const procNo = index;\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_molecules_ProcFrame__WEBPACK_IMPORTED_MODULE_3__.ProcFrame, {\n                            index: index,\n                            grabProcNo: grabProcNo,\n                            grabTaskNo: grabTaskNo,\n                            procMouseDown: procMouseDown,\n                            trans: trans,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"dl\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_atoms_ProcTitle__WEBPACK_IMPORTED_MODULE_5__.ProcTitle, {\n                                        index: index,\n                                        onChangeProcttl: onChangeProcttl,\n                                        value: taskList[index][0]\n                                    }, index, false, {\n                                        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                        lineNumber: 327,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                        fontSize: \"small\",\n                                        className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().list_delete),\n                                        onClick: ()=>onDeleteProc(index)\n                                    }, void 0, false, {\n                                        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                        lineNumber: 330,\n                                        columnNumber: 17\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_molecules_TaskList__WEBPACK_IMPORTED_MODULE_4__.TaskList, {\n                                        listElement: listElement,\n                                        index: index,\n                                        procNo: procNo,\n                                        grabTaskNo: grabTaskNo,\n                                        altgrabProcNo: altgrabProcNo,\n                                        taskMouseDown: taskMouseDown,\n                                        onClickAddTask: onClickAddTask,\n                                        trans: trans,\n                                        onChangeTaskElement: onChangeTaskElement,\n                                        onDeleteTask: onDeleteTask,\n                                        closeModal: closeModal\n                                    }, void 0, false, {\n                                        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                        lineNumber: 331,\n                                        columnNumber: 17\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                                lineNumber: 326,\n                                columnNumber: 15\n                            }, undefined)\n                        }, index, false, {\n                            fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                            lineNumber: 325,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                            id: \"procInsertArea__\".concat(index + 1),\n                            className: \"\".concat((components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().insertArea), \" \").concat(grabProcNo != null ? (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().insertArea_active) : \"\", \" \")\n                        }, void 0, false, {\n                            fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                            lineNumber: 336,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, index, true, {\n                    fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                    lineNumber: 324,\n                    columnNumber: 11\n                }, undefined);\n            }),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().list_last),\n                style: {\n                    visibility: taskList.length < 5 ? \"visible\" : \"hidden\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Add__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                    fontSize: \"large\",\n                    className: (components_organisms_ProcList_module_scss__WEBPACK_IMPORTED_MODULE_8___default().addIcon),\n                    onClick: onClickAddProc\n                }, void 0, false, {\n                    fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                    lineNumber: 342,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n                lineNumber: 341,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Applications/MAMP/htdocs/react+nextjs+typescript/nextjs/tasktool-app/components/organisms/ProcList.tsx\",\n        lineNumber: 318,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ProcList, \"EsLoryADbLPW3Galt5W+OdjaaXc=\", false, function() {\n    return [\n        _hook_useDidUpdateEffect__WEBPACK_IMPORTED_MODULE_6__.useDidUpdateEffect\n    ];\n});\n_c = ProcList;\nvar _c;\n$RefreshReg$(_c, \"ProcList\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/organisms/ProcList.tsx\n"));

      /***/
    })

});